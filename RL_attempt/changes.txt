Changes to do: 


Change MassSpec predictor to only predict amplitude for each m/z bucket, and loss is comparing mass specs 
	- comparing mass specs is done by identifying if two peaks match (in adjacent buckets, each of size 5ppm/0.005Da) 
	- The metrics in paper are weighted recall, weighted precision, recall, precision, Jaccard score (weighted are based on intensity) 
	- Instead, since we are doing regression task, we just take loss as rmse of every bucket (including non peaks) 
	- Allen, F., Greiner, R. & Wishart, D. Competitive fragmentation modeling of ESI-MS/MS spectra for putative metabolite identification. Metabolomics 11, 98â€“110 (2015). https://doi.org/10.1007/s11306-014-0676-4
	 arXiv:1312.0264v3 [cs.CE]
	i think no need to reference it since we didnt rlly use any of the things in there, the loss and metrics we also kind of ignored 
progress: theory done 
tasks completed: changed predictor, utils labels generator, change number of buckets, decide representations loss function, no errors 
todo: test it, make metrics to prove results, pretrain it. 

Remove UVFA and instead condition the GNN to take in the MassSpec embedding as a global conditioning factor 
	- figure out how to have a global conditioning factor 
progress: basic theory done 
tasks completed: implemented global conditioning factor in MolStateAI and replace UVFA functions with it, make train test functions no error 
todo: hindsight experience replay, test and get results 

Make visualization of each state in environment 
	- refer to old networkx project on visualizing different types of nodes :) 
	- maybe use dgl nn-pytorch HeteroGNNExplainer 
progress: except bonus 
tasks completed: make visualization, test visualization 
todo: BONUS explainer 

Make manual_agent.py to test, using user input as commands and stuff 
progress: idk 
tasks completed: get from dataloader, test main loop + reward 
todo: idkkkkk 






increase action space to removing bonds? 

edge labels for visualization figure out? 

GET REAL DATA FOR BONDS.CSV AWEOUIFHAWFEND 

compare mass specs mm find out why the rmse is so suspiciously high - VERY IMPT MMMM 

figure out the one-class gnn thing - it seems simple actl. https://arxiv.org/pdf/2002.09594.pdf 
squared euclidean distance between pos and center of circle, subtracted by radius squared and clipped to 0, (so it'll consider outside), 
+ radius squared to penalize high radius, + weight stuff for weight decay 
look at OCGNN/optim/loss.py hehe 
for weight decay, just use optimizer torch.optim.AdamW(model.parameters(), lr=lr, weight_decay=weight_decay), mm. 
So, changes to make: change optimizer to that, change loss function. Wait, that's it? Predict radius something? 

also, for HER, if we want to be able to change the goal, we need to generate fragment tree of new stuff... how??? 
Or, otherwise, generate a replacement ftree embedding 
So.... no, we can't actually do it.. i mean we cld look at how to make ftree, does this work https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4509603/ 
Or what are we gonna do instead? 


WRITE REPORT YES figure out what we are really doing in this 




hehe random fun stuff to expore 
https://towardsdatascience.com/why-adamw-matters-736223f31b5d 






